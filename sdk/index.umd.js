!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e||self).node={})}(this,function(e){function r(){return r=Object.assign?Object.assign.bind():function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},r.apply(this,arguments)}var t="https://api.zebedee.io",n="/v0/charges",o="/v0/static-charges",s="/v0/payments",a="/v0/withdrawal-requests",i=function(e){var t=e.url,n=e.headers;try{return Promise.resolve(fetch(t,{method:"GET",headers:r({"Content-Type":"application/json"},n)})).then(function(e){function r(r){return Promise.resolve(e.json())}var t=function(){if(!e.ok)return Promise.resolve(e.json()).then(function(r){throw{status:e.status,message:r.message||"API request failed"}})}();return t&&t.then?t.then(r):r()})}catch(e){return Promise.reject(e)}},c=function(e){var t=e.url,n=e.body,o=e.headers;try{return Promise.resolve(fetch(t,{method:"POST",headers:r({"Content-Type":"application/json"},o),body:JSON.stringify(u(n))})).then(function(e){function r(r){return Promise.resolve(e.json())}var t=function(){if(!e.ok)return Promise.resolve(e.json()).then(function(r){throw{status:e.status,message:r.message||"API request failed"}})}();return t&&t.then?t.then(r):r()})}catch(e){return Promise.reject(e)}},u=function(e){for(var r={},t=0,n=Object.entries(e);t<n.length;t++){var o=n[t],s=o[1];null!=s&&(r[o[0]]=s)}return r};function l(e,r){try{var t=e()}catch(e){return r(e)}return t&&t.then?t.then(void 0,r):t}var d=/*#__PURE__*/function(){function e(e){this.apiKey=void 0,this.apiBaseUrl=void 0,this.apiCoreHeaders=void 0,this.apiKey=e,this.apiBaseUrl=t,this.apiCoreHeaders={apikey:e}}var d=e.prototype;return d.createCharge=function(e){try{var o=this;return Promise.resolve(l(function(){var s=e.amount,a=e.expiresIn,i=e.internalId,u=e.description,l=e.callbackUrl;return Promise.resolve(c({url:""+t+n,headers:r({},o.apiCoreHeaders),body:{amount:s,expiresIn:a,internalId:i,description:u,callbackUrl:l}}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.getCharge=function(e){try{var o=this;return Promise.resolve(l(function(){return Promise.resolve(i({url:""+t+n+"/"+e,headers:r({},o.apiCoreHeaders)}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.createWithdrawalRequest=function(e){try{var n=this;return Promise.resolve(l(function(){var o=e.amount,s=e.expiresIn,i=e.internalId,u=e.callbackUrl,l=e.description;return Promise.resolve(c({url:""+t+a,headers:r({},n.apiCoreHeaders),body:{amount:o,expiresIn:s,internalId:i,callbackUrl:u,description:l}}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.getWithdrawalRequest=function(e){try{var n=this;return Promise.resolve(l(function(){return Promise.resolve(i({url:""+t+a+"/"+e,headers:r({},n.apiCoreHeaders)}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.validateLightningAddress=function(e){try{var n=this;return Promise.resolve(l(function(){return Promise.resolve(i({url:t+"/v0/ln-address/validate/"+e,headers:r({},n.apiCoreHeaders)}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.sendLightningAddressPayment=function(e){try{var n=e.amount,o=e.comment,s=e.lnAddress,a=e.internalId,i=e.callbackUrl;return Promise.resolve(c({url:t+"/v0/ln-address/send-payment",headers:r({},this.apiCoreHeaders),body:{amount:n,comment:o,lnAddress:s,internalId:a,callbackUrl:i}}))}catch(e){return Promise.reject(e)}},d.getWallet=function(){try{return Promise.resolve(i({url:t+"/v0/wallet",headers:r({},this.apiCoreHeaders)}))}catch(e){return Promise.reject(e)}},d.isSupportedRegion=function(e){try{var n=this;return Promise.resolve(l(function(){return Promise.resolve(i({url:t+"/v0/is-supported-region/"+e,headers:r({},n.apiCoreHeaders)}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.fetchZBDProdIps=function(){try{var e=this;return Promise.resolve(l(function(){return Promise.resolve(i({url:t+"/v0/prod-ips",headers:r({},e.apiCoreHeaders)}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.btcUsdExchangeRate=function(){try{var e=this;return Promise.resolve(l(function(){return Promise.resolve(i({url:t+"/v0/btcusd",headers:r({},e.apiCoreHeaders)}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.internalTransfer=function(e){try{var n=this;return Promise.resolve(l(function(){var o=e.amount,s=e.receiverWalletId;return Promise.resolve(c({url:t+"/v0/internal-transfer",headers:r({},n.apiCoreHeaders),body:{amount:o,receiverWalletId:s}}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.sendKeysendPayment=function(e){try{var n=this;return Promise.resolve(l(function(){var o=e.amount,s=e.pubkey,a=e.metadata,i=e.tlvRecords,u=e.callbackUrl;return Promise.resolve(c({url:t+"/v0/keysend-payment",headers:r({},n.apiCoreHeaders),body:{amount:o,pubkey:s,metadata:a,tlvRecords:i,callbackUrl:u}}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.payCharge=function(e){try{var n=this;return Promise.resolve(l(function(){var o=e.amount,a=e.invoice,i=e.internalId,u=e.description,l=e.callbackUrl;return Promise.resolve(c({url:""+t+s,headers:r({},n.apiCoreHeaders),body:{amount:o,invoice:a,internalId:i,description:u,callbackUrl:l}}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.getPayment=function(e){try{var n=this;return Promise.resolve(l(function(){return Promise.resolve(i({url:""+t+s+"/"+e,headers:r({},n.apiCoreHeaders)}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.sendGamertagPayment=function(e){try{var n=this;return Promise.resolve(l(function(){var o=e.amount,s=e.gamertag,a=e.description;return Promise.resolve(c({url:t+"/v0/gamertag/send-payment",headers:r({},n.apiCoreHeaders),body:{amount:o,gamertag:s,description:a}}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.fetchGamertagTransaction=function(e){try{var n=this;return Promise.resolve(l(function(){return Promise.resolve(i({url:t+"/v0/gamertag/transaction/"+e,headers:r({},n.apiCoreHeaders)}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.fetchUserIdByGamertag=function(e){try{var n=this;return Promise.resolve(l(function(){return Promise.resolve(i({url:t+"/v0/user-id/gamertag/"+e,headers:r({},n.apiCoreHeaders)}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.fetchGamertagByUserId=function(e){try{var n=this;return Promise.resolve(l(function(){return Promise.resolve(i({url:t+"/v0/gamertag/user-id/"+e,headers:r({},n.apiCoreHeaders)}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.createGamertagCharge=function(e){try{var n=this;return Promise.resolve(l(function(){var o=e.amount,s=e.gamertag,a=e.internalId,i=e.description,u=e.callbackUrl;return Promise.resolve(c({url:t+"/v0/gamertag/charges",headers:r({},n.apiCoreHeaders),body:{amount:o,gamertag:s,internalId:a,description:i,callbackUrl:u}}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.createStaticCharge=function(e){try{var n=this;return Promise.resolve(l(function(){var s=e.allowedSlots,a=e.minAmount,i=e.maxAmount,u=e.description,l=e.internalId,d=e.callbackUrl,h=e.successMessage;return Promise.resolve(c({url:""+t+o,headers:r({},n.apiCoreHeaders),body:{minAmount:a,maxAmount:i,internalId:l,callbackUrl:d,description:u,allowedSlots:s,successMessage:h}}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.updateStaticCharge=function(e,n){try{var s=this;return Promise.resolve(l(function(){return Promise.resolve(function(e){var t=e.url,n=e.body,o=e.headers;try{return Promise.resolve(fetch(t,{method:"PATCH",headers:r({"Content-Type":"application/json"},o),body:JSON.stringify(u(n))})).then(function(e){function r(r){return Promise.resolve(e.json())}var t=function(){if(!e.ok)return Promise.resolve(e.json()).then(function(r){throw{status:e.status,message:r.message||"API request failed"}})}();return t&&t.then?t.then(r):r()})}catch(e){return Promise.reject(e)}}({url:""+t+o+"/"+e,headers:r({},s.apiCoreHeaders),body:n}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},d.getStaticCharge=function(e){try{var n=this;return Promise.resolve(l(function(){return Promise.resolve(i({url:""+t+o+"/"+e,headers:r({},n.apiCoreHeaders)}))},function(e){throw e}))}catch(e){return Promise.reject(e)}},e}();e.types={__proto__:null},e.zbd=d});
//# sourceMappingURL=index.umd.js.map
